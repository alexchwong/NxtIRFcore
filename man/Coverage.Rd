% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Coverage.R
\name{Coverage}
\alias{Coverage}
\alias{GetCoverage}
\alias{GetCoverage_DF}
\title{Calls NxtIRF's C++ function to retrieve coverage from a COV file}
\usage{
GetCoverage(file, seqname = "", start = 0, end = 0, strand = c("*", "+", "-"))

GetCoverage_DF(
  file,
  seqname = "",
  start = 0,
  end = 0,
  strand = c("*", "+", "-")
)
}
\arguments{
\item{file}{The file name of the COV file}

\item{seqname}{Either blank, or a character string denoting the chromosome
name. If blank, retrieves RLEList containing whole-transcriptome coverage}

\item{start, end}{1-based genomic coordinates. If \code{start = 0} and
\code{end = 0}, will retrieve RLE of specified chromosome.}

\item{strand}{Either "*", "+", or "-"}
}
\value{
If seqname is left as "", returns an RLEList of the whole BAM file.
If seqname and coordinates are given, returns an RLE containing the
chromosome coordinate. Coverage outside the given range will be set to 0
}
\description{
This function returns an RLE / RLEList or data.frame
containing coverage data from the given COV file
}
\section{Functions}{
\itemize{
\item \code{GetCoverage}: Retrieves alignment coverage as an RLE or RLElist

\item \code{GetCoverage_DF}: Retrieves alignment coverage as a data.frame
}}

\examples{
se <- NxtIRF_example_NxtSE()

cov_file <- covfile(se)[1]

# Retrieve Coverage as RLE

cov <- GetCoverage(cov_file, seqname = "chrZ", 
  start = 10000, end = 20000,
  strand = "*"
)

# Retrieve Coverage as data.frame

cov.df <- GetCoverage_DF(cov_file, seqname = "chrZ", 
  start = 10000, end = 20000,
  strand = "*"
)

# Plot coverage using ggplot:

require(ggplot2)
ggplot(cov.df, aes(x = coordinate, y = value)) + geom_line() + theme_white

# Export COV data as BigWig

cov_whole = GetCoverage(cov_file)
bw_file = file.path(tempdir(), "sample.bw")
rtracklayer::export(cov_whole, bw_file, "bw")

}
