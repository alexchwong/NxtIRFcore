% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Coverage.R
\name{Plot_Coverage}
\alias{Plot_Coverage}
\alias{as_egg_ggplot}
\title{Generate plotly / ggplot RNA-seq coverage plots from command line}
\usage{
Plot_Coverage(
  se,
  Event,
  Gene,
  seqname,
  start,
  end,
  strand = c("*", "+", "-"),
  zoom_factor,
  tracks,
  track_names = tracks,
  condition,
  selected_transcripts,
  condense_tracks = FALSE,
  stack_tracks = TRUE,
  t_test = TRUE,
  norm_event,
  bases_flanking = 100
)

as_egg_ggplot(p_obj)
}
\arguments{
\item{se}{A NxtSE object, created by \code{\link[=MakeSE]{MakeSE()}}.
If \code{COV} files are not linked to this object, set a
corresponding list of \code{COV} files using
\code{covfile(se) <- vector_of_cov_files}}

\item{Event}{The \code{EventName} of the IR / alternative splicing event to be
displayed. To display a list of valid \code{Events}, type in \code{rownames(se)}}

\item{Gene}{Whether to use the range for the given Gene. If given and valid,
overrides Event (but \code{Event} or \code{norm_event} will be used to normalise by
condition). Valid \code{Gene} entries include gene_id (Ensembl ID) or gene_name
(Gene Symbol).}

\item{seqname, start, end}{The chromosome (as a single character) and genomic
coordinates (numeric) of the region to display. If present, overrides both
\code{Event} and \code{Gene}. E.g. for a given region of chr1:10000-11000,
enter the parameters: \verb{seqname = "chr1", start = 10000, end = 11000}}

\item{strand}{Whether to show coverage of both strands "*" (default), or
from the "+" or "-" strand only.}

\item{zoom_factor}{Zoom out from event. Each level of zoom zooms out by a
factor of 3. E.g. for a query region of chr1:10000-11000, if a
\code{zoom_factor} of 1.0 is given, chr1:99000-12000 will be displayed.}

\item{tracks}{The names of individual samples (if \code{condition} is not set),
or the names of the different conditions to be plotted.}

\item{track_names}{The names of the tracks to be displayed. If omitted, the
track_names will default to the input in \code{tracks}}

\item{condition}{The name of the column (of \code{colData(se)} containing the
conditions to be contrasted. If this is not set, \code{tracks} are assumed to be
names of individual samples}

\item{selected_transcripts}{Transcript ID or transcript names of transcripts
to be displayed on the gene annotation track. Useful to remove minor
isoforms that are not relevant to the samples being displayed.}

\item{condense_tracks}{Whether to collapse the transcript tracks by gene.}

\item{stack_tracks}{Whether to graph all the conditions on a single coverage
track. If set to true, each condition will be displayed in a different
colour.}

\item{t_test}{Whether to perform a pair-wise T-test. Only used if there are
TWO condition tracks.}

\item{norm_event}{Whether to normalise by an event different to that given
in "Event". The difference between this and Event is that the genomic
coordinates can be centered around a different \code{Event}, \code{Gene} or region
as given in \code{seqname/start/end}. If \code{norm_event} is different to
\code{Event}, \code{norm_event} will be used for normalisation and \code{Event} will be
used to define the genomic coordinates of the viewing window.}

\item{bases_flanking}{How many bases flanking the zoomed window. Useful when
used in conjunction with zoom_factor == 0. E.g. for a given region of
chr1:10000-11000, if \code{zoom_factor = 0} and \code{bases_flanking = 100}, the
region chr1:9900-11100 will be displayed.}

\item{p_obj}{In \code{as_egg_ggplot}, takes the output of \code{Plot_Coverage} and
plots all tracks in a static plot using \code{ggarrange} function of the
\code{egg} package. Requires \code{egg} to be installed.}
}
\value{
A list containing two objects. final_plot is the plotly object.
ggplot is a list of ggplot tracks.\cr\cr
\code{ggplot[[n]]} is the nth track (this function supports up to 4 tracks).
\cr\cr
\code{ggplot[[5]]} contains the T-test track if valid.\cr\cr
\code{ggplot[[6]]} always contains the genome track.\cr\cr
}
\description{
This function generates a coverage plot illustrating differential expression
of intron retention or alternative splicing (differential exon coverage).
It can normalise coverage of samples per condition using NxtIRF's SpliceOver
parameter that normalises the flanking exon boundaries to 1.
}
\section{Functions}{
\itemize{
\item \code{as_egg_ggplot}: Coerce the Plot_Coverage output as a vertically
stacked ggplot, using egg::ggarrange
}}

\examples{
se = NxtIRF_example_NxtSE()

colData(se)$treatment = rep(c("A", "B"), each = 3)

# View the COV files linked to the NxtSE object:
covfile(se)

# Return a list of ggplot and plotly objects
p = Plot_Coverage(
    se = se, 
    Event = rowData(se)$EventName[1], 
    tracks = colnames(se)[1:4]
)

# Display a static ggplot / egg::ggarrange stacked plot:

as_egg_ggplot(p)

# Display the plotly-based interactive Coverage plot:
p$final_plot

# Plot the same event but by condition "treatment"
p = Plot_Coverage(
    se, rowData(se)$EventName[1], 
    tracks = c("A", "B"), condition = "treatment"
)
as_egg_ggplot(p)

}
