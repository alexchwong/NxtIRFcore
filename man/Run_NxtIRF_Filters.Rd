% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Filters.R
\name{Run_NxtIRF_Filters}
\alias{Run_NxtIRF_Filters}
\alias{get_default_filters,}
\alias{apply_filters,}
\alias{runFilter}
\alias{get_default_filters}
\alias{apply_filters}
\title{Filtering for IR and Alternative Splicing Events}
\usage{
get_default_filters()

runFilter(se, filterObj)

apply_filters(se, filters = get_default_filters())
}
\arguments{
\item{se}{the NxtSE SummarizedExperiment to filter}

\item{filterObj}{A single NxtFilter object.}

\item{filters}{A vector or list of one or more NxtFilter objects. If left
blank, the NxtIRF default filters will be used.}
}
\value{
For \code{runFilter} and \code{apply_filters}, a vector of type \code{logical},
representing the rows of NxtSE that should be kept.
For \code{get_default_filters}, returns a vector of default recommended filters
that should be parsed into \code{apply_filters}.
}
\description{
This function implements filtering of IR or AS events based on customisable
criteria. See \link{NxtFilter} for details.
}
\details{
We highly recommend using the default filters, which are as follows:
\cr\cr
(1) Depth filter of 20,\cr\cr
(2) Coverage filter requiring 90\% coverage in IR events.\cr\cr
(3) Coverage filter requiring 60\% coverage in AS events
(i.e. Included + Excluded isoforms must cover at least 60\% of all junction
events across the given region)\cr\cr
(4) Consistency filter requring log difference of 2 (for skipped exon and
mutually exclusive exon events, each junction must comprise at least 1/(2^2)
= 1/4 of all reads associated with each isoform).
For retained introns, the exon-intron overhangs must not differ by 1/4\cr\cr
In all filters, we require at least 80\% samples (\code{pcTRUE = 80}) from the
entire dataset (i.e. \code{minCond = -1}).
Events with event read depth (reads supporting either included or excluded
isoforms) lower than 5 (\code{minDepth = 5}) are not assessed in filter #2, and
in #3 and #4 this threshold is (\code{minDepth = 20}).\cr\cr
For an explanation of the various parameters mentioned here, see \link{NxtFilter}
}
\section{Functions}{
\itemize{
\item \code{get_default_filters}: Returns a vector of recommended default
NxtIRF filters

\item \code{runFilter}: Run a single filter on a NxtSE object

\item \code{apply_filters}: Run a vector or list of NxtFilter objects
on a NxtSE object
}}

\examples{
# see ?MakeSE on example code of generating this NxtSE object
se = NxtIRF_example_NxtSE()

# Get the list of NxtIRF recommended filters
filters = get_default_filters()

# View a description of what these filters do:
filters

# Filter the SummarizedExperiment using the first default filter ("Depth")
se.depthfilter = se[runFilter(se, filters[[1]]),]

se.defaultFiltered = se[apply_filters(se, get_default_filters()),]
}
\seealso{
\link{NxtFilter} for details describing how to create and assign settings
to NxtFilter objects.
}
